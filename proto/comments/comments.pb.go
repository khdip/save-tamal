// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: proto/comments/comments.proto

package comments

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Comment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CommentID     int32                  `protobuf:"varint,1,opt,name=CommentID,proto3" json:"CommentID,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Email         string                 `protobuf:"bytes,3,opt,name=Email,proto3" json:"Email,omitempty"`
	Comment       string                 `protobuf:"bytes,4,opt,name=Comment,proto3" json:"Comment,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Comment) Reset() {
	*x = Comment{}
	mi := &file_proto_comments_comments_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Comment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Comment) ProtoMessage() {}

func (x *Comment) ProtoReflect() protoreflect.Message {
	mi := &file_proto_comments_comments_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Comment.ProtoReflect.Descriptor instead.
func (*Comment) Descriptor() ([]byte, []int) {
	return file_proto_comments_comments_proto_rawDescGZIP(), []int{0}
}

func (x *Comment) GetCommentID() int32 {
	if x != nil {
		return x.CommentID
	}
	return 0
}

func (x *Comment) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Comment) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Comment) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *Comment) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type Filter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Offset        int32                  `protobuf:"varint,1,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit         int32                  `protobuf:"varint,2,opt,name=Limit,proto3" json:"Limit,omitempty"`
	SortBy        string                 `protobuf:"bytes,3,opt,name=SortBy,proto3" json:"SortBy,omitempty"`
	Order         string                 `protobuf:"bytes,4,opt,name=Order,proto3" json:"Order,omitempty"`
	SearchTerm    string                 `protobuf:"bytes,5,opt,name=SearchTerm,proto3" json:"SearchTerm,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Filter) Reset() {
	*x = Filter{}
	mi := &file_proto_comments_comments_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Filter) ProtoMessage() {}

func (x *Filter) ProtoReflect() protoreflect.Message {
	mi := &file_proto_comments_comments_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Filter.ProtoReflect.Descriptor instead.
func (*Filter) Descriptor() ([]byte, []int) {
	return file_proto_comments_comments_proto_rawDescGZIP(), []int{1}
}

func (x *Filter) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *Filter) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *Filter) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

func (x *Filter) GetOrder() string {
	if x != nil {
		return x.Order
	}
	return ""
}

func (x *Filter) GetSearchTerm() string {
	if x != nil {
		return x.SearchTerm
	}
	return ""
}

type CreateCommentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Comm          *Comment               `protobuf:"bytes,1,opt,name=comm,proto3" json:"comm,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCommentRequest) Reset() {
	*x = CreateCommentRequest{}
	mi := &file_proto_comments_comments_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCommentRequest) ProtoMessage() {}

func (x *CreateCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_comments_comments_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCommentRequest.ProtoReflect.Descriptor instead.
func (*CreateCommentRequest) Descriptor() ([]byte, []int) {
	return file_proto_comments_comments_proto_rawDescGZIP(), []int{2}
}

func (x *CreateCommentRequest) GetComm() *Comment {
	if x != nil {
		return x.Comm
	}
	return nil
}

type CreateCommentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CommentID     int32                  `protobuf:"varint,1,opt,name=CommentID,proto3" json:"CommentID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCommentResponse) Reset() {
	*x = CreateCommentResponse{}
	mi := &file_proto_comments_comments_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCommentResponse) ProtoMessage() {}

func (x *CreateCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_comments_comments_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCommentResponse.ProtoReflect.Descriptor instead.
func (*CreateCommentResponse) Descriptor() ([]byte, []int) {
	return file_proto_comments_comments_proto_rawDescGZIP(), []int{3}
}

func (x *CreateCommentResponse) GetCommentID() int32 {
	if x != nil {
		return x.CommentID
	}
	return 0
}

type GetCommentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Comm          *Comment               `protobuf:"bytes,1,opt,name=comm,proto3" json:"comm,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCommentRequest) Reset() {
	*x = GetCommentRequest{}
	mi := &file_proto_comments_comments_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommentRequest) ProtoMessage() {}

func (x *GetCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_comments_comments_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommentRequest.ProtoReflect.Descriptor instead.
func (*GetCommentRequest) Descriptor() ([]byte, []int) {
	return file_proto_comments_comments_proto_rawDescGZIP(), []int{4}
}

func (x *GetCommentRequest) GetComm() *Comment {
	if x != nil {
		return x.Comm
	}
	return nil
}

type GetCommentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Comm          *Comment               `protobuf:"bytes,1,opt,name=comm,proto3" json:"comm,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCommentResponse) Reset() {
	*x = GetCommentResponse{}
	mi := &file_proto_comments_comments_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommentResponse) ProtoMessage() {}

func (x *GetCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_comments_comments_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommentResponse.ProtoReflect.Descriptor instead.
func (*GetCommentResponse) Descriptor() ([]byte, []int) {
	return file_proto_comments_comments_proto_rawDescGZIP(), []int{5}
}

func (x *GetCommentResponse) GetComm() *Comment {
	if x != nil {
		return x.Comm
	}
	return nil
}

type ListCommentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filter        *Filter                `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCommentRequest) Reset() {
	*x = ListCommentRequest{}
	mi := &file_proto_comments_comments_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCommentRequest) ProtoMessage() {}

func (x *ListCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_comments_comments_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCommentRequest.ProtoReflect.Descriptor instead.
func (*ListCommentRequest) Descriptor() ([]byte, []int) {
	return file_proto_comments_comments_proto_rawDescGZIP(), []int{6}
}

func (x *ListCommentRequest) GetFilter() *Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type ListCommentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Comm          []*Comment             `protobuf:"bytes,1,rep,name=comm,proto3" json:"comm,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCommentResponse) Reset() {
	*x = ListCommentResponse{}
	mi := &file_proto_comments_comments_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCommentResponse) ProtoMessage() {}

func (x *ListCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_comments_comments_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCommentResponse.ProtoReflect.Descriptor instead.
func (*ListCommentResponse) Descriptor() ([]byte, []int) {
	return file_proto_comments_comments_proto_rawDescGZIP(), []int{7}
}

func (x *ListCommentResponse) GetComm() []*Comment {
	if x != nil {
		return x.Comm
	}
	return nil
}

var File_proto_comments_comments_proto protoreflect.FileDescriptor

const file_proto_comments_comments_proto_rawDesc = "" +
	"\n" +
	"\x1dproto/comments/comments.proto\x12\bcomments\x1a\x1fgoogle/protobuf/timestamp.proto\"\xa5\x01\n" +
	"\aComment\x12\x1c\n" +
	"\tCommentID\x18\x01 \x01(\x05R\tCommentID\x12\x12\n" +
	"\x04Name\x18\x02 \x01(\tR\x04Name\x12\x14\n" +
	"\x05Email\x18\x03 \x01(\tR\x05Email\x12\x18\n" +
	"\aComment\x18\x04 \x01(\tR\aComment\x128\n" +
	"\tCreatedAt\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tCreatedAt\"\x84\x01\n" +
	"\x06Filter\x12\x16\n" +
	"\x06Offset\x18\x01 \x01(\x05R\x06Offset\x12\x14\n" +
	"\x05Limit\x18\x02 \x01(\x05R\x05Limit\x12\x16\n" +
	"\x06SortBy\x18\x03 \x01(\tR\x06SortBy\x12\x14\n" +
	"\x05Order\x18\x04 \x01(\tR\x05Order\x12\x1e\n" +
	"\n" +
	"SearchTerm\x18\x05 \x01(\tR\n" +
	"SearchTerm\"=\n" +
	"\x14CreateCommentRequest\x12%\n" +
	"\x04comm\x18\x01 \x01(\v2\x11.comments.CommentR\x04comm\"5\n" +
	"\x15CreateCommentResponse\x12\x1c\n" +
	"\tCommentID\x18\x01 \x01(\x05R\tCommentID\":\n" +
	"\x11GetCommentRequest\x12%\n" +
	"\x04comm\x18\x01 \x01(\v2\x11.comments.CommentR\x04comm\";\n" +
	"\x12GetCommentResponse\x12%\n" +
	"\x04comm\x18\x01 \x01(\v2\x11.comments.CommentR\x04comm\">\n" +
	"\x12ListCommentRequest\x12(\n" +
	"\x06filter\x18\x01 \x01(\v2\x10.comments.FilterR\x06filter\"<\n" +
	"\x13ListCommentResponse\x12%\n" +
	"\x04comm\x18\x01 \x03(\v2\x11.comments.CommentR\x04comm2\xfd\x01\n" +
	"\x0eCommentService\x12R\n" +
	"\rCreateComment\x12\x1e.comments.CreateCommentRequest\x1a\x1f.comments.CreateCommentResponse\"\x00\x12I\n" +
	"\n" +
	"GetComment\x12\x1b.comments.GetCommentRequest\x1a\x1c.comments.GetCommentResponse\"\x00\x12L\n" +
	"\vListComment\x12\x1c.comments.ListCommentRequest\x1a\x1d.comments.ListCommentResponse\"\x00B\x12Z\x10./proto/commentsb\x06proto3"

var (
	file_proto_comments_comments_proto_rawDescOnce sync.Once
	file_proto_comments_comments_proto_rawDescData []byte
)

func file_proto_comments_comments_proto_rawDescGZIP() []byte {
	file_proto_comments_comments_proto_rawDescOnce.Do(func() {
		file_proto_comments_comments_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_comments_comments_proto_rawDesc), len(file_proto_comments_comments_proto_rawDesc)))
	})
	return file_proto_comments_comments_proto_rawDescData
}

var file_proto_comments_comments_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_proto_comments_comments_proto_goTypes = []any{
	(*Comment)(nil),               // 0: comments.Comment
	(*Filter)(nil),                // 1: comments.Filter
	(*CreateCommentRequest)(nil),  // 2: comments.CreateCommentRequest
	(*CreateCommentResponse)(nil), // 3: comments.CreateCommentResponse
	(*GetCommentRequest)(nil),     // 4: comments.GetCommentRequest
	(*GetCommentResponse)(nil),    // 5: comments.GetCommentResponse
	(*ListCommentRequest)(nil),    // 6: comments.ListCommentRequest
	(*ListCommentResponse)(nil),   // 7: comments.ListCommentResponse
	(*timestamppb.Timestamp)(nil), // 8: google.protobuf.Timestamp
}
var file_proto_comments_comments_proto_depIdxs = []int32{
	8, // 0: comments.Comment.CreatedAt:type_name -> google.protobuf.Timestamp
	0, // 1: comments.CreateCommentRequest.comm:type_name -> comments.Comment
	0, // 2: comments.GetCommentRequest.comm:type_name -> comments.Comment
	0, // 3: comments.GetCommentResponse.comm:type_name -> comments.Comment
	1, // 4: comments.ListCommentRequest.filter:type_name -> comments.Filter
	0, // 5: comments.ListCommentResponse.comm:type_name -> comments.Comment
	2, // 6: comments.CommentService.CreateComment:input_type -> comments.CreateCommentRequest
	4, // 7: comments.CommentService.GetComment:input_type -> comments.GetCommentRequest
	6, // 8: comments.CommentService.ListComment:input_type -> comments.ListCommentRequest
	3, // 9: comments.CommentService.CreateComment:output_type -> comments.CreateCommentResponse
	5, // 10: comments.CommentService.GetComment:output_type -> comments.GetCommentResponse
	7, // 11: comments.CommentService.ListComment:output_type -> comments.ListCommentResponse
	9, // [9:12] is the sub-list for method output_type
	6, // [6:9] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_proto_comments_comments_proto_init() }
func file_proto_comments_comments_proto_init() {
	if File_proto_comments_comments_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_comments_comments_proto_rawDesc), len(file_proto_comments_comments_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_comments_comments_proto_goTypes,
		DependencyIndexes: file_proto_comments_comments_proto_depIdxs,
		MessageInfos:      file_proto_comments_comments_proto_msgTypes,
	}.Build()
	File_proto_comments_comments_proto = out.File
	file_proto_comments_comments_proto_goTypes = nil
	file_proto_comments_comments_proto_depIdxs = nil
}
